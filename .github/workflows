name: Python CI/CD Pipeline Extended

on:
  push:
    branches: [ main ]
    tags: ['v*']
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install Linting Tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black
      - name: Run Linters
        run: |
          flake8 .
          black --check .

  build-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          pytest --maxfail=1 --disable-warnings -q
      - name: Run Test Coverage
        run: |
          pip install coverage
          coverage run -m pytest
          coverage report

  security-scan:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install Security Tools
        run: |
          pip install bandit safety
      - name: Run Bandit Security Analysis
        run: bandit -r .
      - name: Check Vulnerable Packages with Safety
        run: safety check

  docker-build:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .
          docker push ghcr.io/${{ github.repository }}:latest

  deploy:
    needs: [build-test, docker-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Deploy Application
        env:
          DEPLOY_API_KEY: ${{ secrets.DEPLOY_API_KEY }}
        run: |
          echo "Deploying application..."
          python deploy.py
